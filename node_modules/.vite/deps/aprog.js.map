{
  "version": 3,
  "sources": ["../../aprog/src/aprog.js", "../../aprog/src/debugger.js", "../../aprog/src/redirect.js", "../../aprog/src/NotFound.js", "../../aprog/src/router.js", "../../aprog/src/shifrator.js", "../../aprog/src/indexDB.js", "../../aprog/src/OpenAI.js", "../../aprog/src/math.js", "../../aprog/src/storage.js", "../../aprog/src/paginate.js"],
  "sourcesContent": ["export const pause = (variable) => {\n    if (isNumber(variable)) {\n        return new Promise(resolve => setTimeout(resolve, variable));\n    } else {\n        return new Promise(resolve => {\n            const checkVariable = () => {\n                if (variable()) {\n                    resolve();\n                } else {\n                    setTimeout(checkVariable, 100);\n                }\n            };\n            checkVariable();\n        });\n    }\n}\n\n\nexport const date = (format, timestamp = Date.now()) => {\n    const date = new Date(timestamp);\n\n    const map = {\n        Y: date.getFullYear(),\n        m: String(date.getMonth() + 1).padStart(2, '0'),\n        d: String(date.getDate()).padStart(2, '0'),\n        H: String(date.getHours()).padStart(2, '0'),\n        i: String(date.getMinutes()).padStart(2, '0'),\n        s: String(date.getSeconds()).padStart(2, '0')\n    };\n\n    return format.replace(/[YmdHis]/g, match => map[match]);\n}\n\n\nexport const chars = (word) => {\n    const cyrillicToLatin = {\n        'А': 'A', 'Б': 'B', 'В': 'V', 'Г': 'H', 'Д': 'D', 'Е': 'E', 'Є': 'Ye', 'Ж': 'Zh',\n        'З': 'Z', 'И': 'Y', 'І': 'I', 'Ї': 'Yi', 'Й': 'Y', 'К': 'K', 'Л': 'L', 'М': 'M',\n        'Н': 'N', 'О': 'O', 'П': 'P', 'Р': 'R', 'С': 'S', 'Т': 'T', 'У': 'U', 'Ф': 'F',\n        'Х': 'Kh', 'Ц': 'Ts', 'Ч': 'Ch', 'Ш': 'Sh', 'Щ': 'Shch', 'Ю': 'Yu', 'Я': 'Ya',\n        'а': 'a', 'б': 'b', 'в': 'v', 'г': 'h', 'д': 'd', 'е': 'e', 'є': 'ye', 'ж': 'zh',\n        'з': 'z', 'и': 'y', 'і': 'i', 'ї': 'yi', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm',\n        'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f',\n        'х': 'kh', 'ц': 'ts', 'ч': 'ch', 'ш': 'sh', 'щ': 'shch', 'ю': 'yu', 'я': 'ya',\n        'Ь': '', 'ь': '', 'Ъ': '', 'ъ': '', 'Э': 'E', 'э': 'e', 'Ы': 'Y', 'ы': 'y'\n    };\n    return word.split('').map(char => cyrillicToLatin[char] || char).join('');\n}\n\n\n// Validates\nexport const isArray = (value) => {\n    return Object.prototype.toString.call(value) === '[object Array]';\n}\n\n\nexport const isObject = (value) => {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\n\n\nexport const isPromise = (value) => {\n    return Object.prototype.toString.call(value) === '[object Promise]' ||\n        (typeof value === 'object' && value !== null && typeof value.then === 'function' && typeof value.catch === 'function');\n}\n\n\nexport const isNumber = (value) => {\n    return typeof value === 'number' && !Number.isNaN(value);\n}\n\n\nexport const isNumeric = (value) => {\n    return /^-?\\d+(\\.\\d+)?$/.test(value);\n}\n\n\nexport const isFloat = (value) => {\n    return !isNaN(value) && Number(value) === value && !Number.isInteger(value);\n}\n\n\nexport const isString = (value) => {\n    return typeof value === 'string';\n}\n\n\nexport const isNull = (value) => {\n    return value === null || value === undefined;\n}\n\n\nconst isHtmlElement = (value) => {\n    const htmlElements = [\n        'HTMLDivElement', \"HTMLAnchorElement\", 'HTMLSpanElement',\n        'HTMLButtonElement', 'HTMLSelectElement', \"HTMLMainElement\",\n        'HTMLInputElement', 'HTMLUlElement', \"Promise\",\n        'HTMLListElement', 'HTMLLabelElement', \"HTMLTableCaptionElement\",\n        'HTMLHRElement', 'SVGSVGElement', 'HTMLPreElement',\n        'Promise', \"HTMLTextAreaElement\", \"HTMLTableElement\",\n        \"HTMLTHeaderElement\", \"HTMLTBodyElement\", \"HTMLTRElement\",\n        \"HTMLTHElement\", \"HTMLTDElement\", \"HTMLTableSectionElement\",\n        \"HTMLTableRowElement\", \"HTMLTableCellElement\", \"HTMLImageElement\",\n        \"HTMLSectionElement\"\n    ]\n\n    return htmlElements.some((element) => {\n        return Object.prototype.toString.call(value) === `[object ${element}]`;\n    });\n}\n\n\nexport const isEmpty = (variable) => {\n    if (variable === undefined || variable === null) {\n        return true;\n    }\n    if (typeof variable === 'string' && variable.trim() === '') {\n        return true;\n    }\n    if (Array.isArray(variable) && variable.length === 0) {\n        return true;\n    }\n    if (typeof variable === 'object' && !Array.isArray(variable) && Object.keys(variable).length === 0) {\n        return true;\n    }\n    if (typeof variable === 'number' && variable === 0) {\n        return false;\n    }\n    return !variable;\n}\n\n\nexport const elementToObject = (element) => {\n    const obj = {};\n    for (let attr of element.attributes) {\n        obj[attr.name] = attr.value;\n    }\n    if (element.tagName.toLowerCase() === 'input') {\n        obj['inputValue'] = element.value;\n    } else if (element.tagName.toLowerCase() === 'select') {\n        obj['selectValue'] = element.value;\n    }\n    return obj;\n}\n\n\nexport const nodeListToObject = (nodeList) => {\n    return Array.from(nodeList).map((el, index) => ({\n        ...(el.id && {id: el.id}),\n        ...(el.classList && {classList: [...el.classList]}),\n        ...(el.name && {name: el.name}),\n        ...(el.tagName && {element: el.tagName.toLowerCase()}),\n        ...(el.children && {children: [...nodeListToObject(el.children)]}),\n        ...(el.attributes && {attributes: Array.from(el.attributes).reduce((acc, attr) => {\n                acc[attr.name] = attr.value;\n                return acc;\n            }, {})}),\n        ...(el.value && {value: el.value}),\n        ...(el.innerText && {value: el.innerText}),\n        index: index\n    }));\n}\n\n\nexport const deepEqual = (obj1, obj2) => {\n    if (obj1 === obj2) return true;\n    if (obj1 == null || obj2 == null) return false;\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) return false;\n    for (const key of keys1) {\n        if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nexport const ucfirst = (str) => {\n    if (!str) return str;\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const firstKey = (object) => {\n    return Object.keys(object)[0] || null;\n}\n\n\nexport const copyText = async (element) => {\n    try {\n        const textToCopy = isHtmlElement(element) ? JSON.stringify(JSON.parse(element.innerText)) : element;\n        await navigator.clipboard.writeText(textToCopy);\n        console.log(\"Скопійовано\");\n    } catch (err) {\n        console.error('Помилка копіювання! Error:', err);\n    }\n}\n\n\n// HTML Elements\nexport const options = (object, selected = null, disabled = null) => {\n    if (isObject(object)) {\n        return Object.entries(object).map(([key, value]) => {\n            key = isNumeric(key) ? parseFloat(key) : key;\n            return {\n                value: key,\n                name: value,\n                selected: key === selected,\n                disabled: key === disabled,\n            };\n        });\n    } else {\n        return object.map((value, index) => {\n            if (isObject(value)) {\n                return Object.entries(value).map(([key, value]) => {\n                    key = isNumeric(key) ? parseFloat(key) : key;\n                    return {\n                        value: key,\n                        name: value,\n                        selected: key === selected,\n                        disabled: key === disabled,\n                    };\n                });\n            } else {\n                return {\n                    value: value,\n                    name: value,\n                    selected: value === selected,\n                    disabled: value === disabled,\n                };\n            }\n        });\n    }\n}\n\n\nexport const input = (attributes = {}) => {\n    let input = document.createElement(\"input\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                input.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"type\":\n                        input.type = String(attrValue);\n                        break;\n                    case \"class\":\n                        input.className = String(attrValue);\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    input.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    input.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    case \"disabled\":\n                        input.disabled = attrValue;\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            input.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            input.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return input;\n}\n\n\nexport const label = (attributes = {}) => {\n    let label = document.createElement(\"label\");\n    label.setAttribute(\"for\", \"...\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                label.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        label.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? label.appendChild(element) : label.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? label.appendChild(attrValue) : label.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    label.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    label.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            label.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            label.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return label;\n}\n\n\nexport const form = (attributes = {}) => {\n    let form = document.createElement(\"form\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                form.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        form.className = String(attrValue);\n                        break;\n                    case \"action\":\n                        form.action = String(attrValue);\n                        break;\n                    case \"method\":\n                        form.method = String(attrValue);\n                        break;\n                    case \"enctype\":\n                        form.enctype = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? form.append(element) : form.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? form.append(attrValue) : form.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    form.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    form.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            form.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            form.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return form;\n}\n\n\nexport const div = (attributes = {}) => {\n    let div = document.createElement(\"div\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                div.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        div.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? div.append(element) : div.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? div.append(attrValue) : div.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    div.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    div.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            div.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            div.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return div;\n}\n\n\nexport const a = (attributes = {}) => {\n    let a = document.createElement(\"a\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                a.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        a.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? a.append(element) : a.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? a.append(attrValue) : a.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    a.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    a.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            a.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            a.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return a;\n}\n\n\nexport const span = (attributes = {}) => {\n    let span = document.createElement(\"span\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                span.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        span.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? span.append(element) : span.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? span.append(attrValue) : span.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    span.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    span.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            span.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            span.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return span;\n}\n\n\nexport const textarea = (attributes = {}) => {\n    let textarea = document.createElement(\"textarea\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                textarea.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        textarea.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? textarea.appendChild(element) : textarea.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? textarea.appendChild(attrValue) : textarea.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    textarea.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    textarea.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            textarea.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            textarea.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return textarea;\n}\n\n\nexport const pre = (attributes = {}) => {\n    let pre = document.createElement(\"pre\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                pre.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        pre.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? pre.appendChild(element) : pre.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? pre.appendChild(attrValue) : pre.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    pre.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    pre.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            pre.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            pre.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return pre;\n}\n\n\nexport const button = (attributes = {}) => {\n    let button = document.createElement(\"button\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                button.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        button.className = String(attrValue);\n                        break;\n                    case \"type\":\n                        button.type = String(attrValue);\n                        break;\n                    case \"value\":\n                        button.innerHTML = String(attrValue);\n                        break;\n                    case \"disabled\":\n                        button.disabled = attrValue;\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    button.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    button.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            button.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            button.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return button;\n}\n\n\nexport const select = (attributes = {}) => {\n    let select = document.createElement(\"select\");\n    let option = document.createElement(\"option\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                select.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        select.className = String(attrValue);\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    select.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    select.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    case \"option\":\n                        Object.entries(attrValue).forEach(([optionName, optionValue]) => {\n                            switch (optionName) {\n                                case \"value\":\n                                    option.setAttribute('value', String(optionValue));\n                                    break;\n                                case \"name\":\n                                    option.innerHTML = String(optionValue);\n                                    break;\n                                case \"selected\":\n                                    option.selected = true;\n                                    break;\n                                case \"disabled\":\n                                    option.disabled = true;\n                                    break;\n                            }\n                        });\n                        select.appendChild(option);\n                        break;\n                    case \"options\":\n                        attrValue.forEach((opt) => {\n                            let customOption = document.createElement(\"option\");\n                            Object.entries(opt).forEach(([optionName, optionValue]) => {\n                                switch (optionName) {\n                                    case \"value\":\n                                        customOption.value = String(optionValue);\n                                        break;\n                                    case \"name\":\n                                        customOption.innerHTML = String(optionValue);\n                                        break;\n                                    case \"selected\":\n                                        customOption.selected = Boolean(optionValue);\n                                        break;\n                                    case \"disabled\":\n                                        customOption.disabled = Boolean(optionValue);\n                                        break;\n                                }\n                            });\n                            select.appendChild(customOption);\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            select.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            select.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return select;\n};\n\n\n\nexport const option = (attributes = {}) => {\n    let option = document.createElement(\"option\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([optionName, optionValue]) => {\n            switch (optionName) {\n                case \"value\": option.value = optionValue; break;\n                case \"name\": option.textContent = optionValue; break;\n                case \"selected\": option.selected = !!optionValue; break;\n                case \"disabled\": option.disabled = !!optionValue; break;\n            }\n        });\n    }\n    return option;\n}\n\n\nexport const hr = (attributes = {}) => {\n    let hr = document.createElement(\"hr\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            switch (name) {\n                case \"class\": hr.className = String(attrValue); break;\n                case \"style\": Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                    switch (styleName) {\n                        case \"zIndex\": hr.style[styleName] = `99999${styleValue}`; break;\n                        default: hr.style[styleName] = styleValue; break;\n                    }\n                }); break;\n                default: hr.setAttribute(name, String(attrValue));\n            }\n        });\n    }\n    return hr;\n}\n\n\nexport const meta = (attributes = {}) => {\n    let meta = document.createElement(\"meta\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            switch (name) {\n                case \"class\": meta.className = String(attrValue); break;\n                case \"style\": Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                    switch (styleName) {\n                        case \"zIndex\": meta.style[styleName] = `99999${styleValue}`; break;\n                        default: meta.style[styleName] = styleValue; break;\n                    }\n                }); break;\n                default: meta.setAttribute(name, String(attrValue));\n            }\n        });\n    }\n    return meta;\n}\n\n\nexport const table = (attributes = {}) => {\n    let table = document.createElement(\"table\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                table.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        table.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? table.append(element) : table.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? table.append(attrValue) : table.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    table.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    table.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            table.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            table.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return table;\n}\n\n\nexport const caption = (attributes = {}) => {\n    let caption = document.createElement(\"caption\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                caption.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"side\":\n                        caption.style.captionSide = String(attrValue);\n                        break;\n                    case \"class\":\n                        caption.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? caption.append(element) : caption.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? caption.append(attrValue) : caption.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    caption.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    caption.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            caption.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            caption.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return caption;\n}\n\n\nexport const thead = (attributes = {}) => {\n    let thead = document.createElement(\"thead\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                thead.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        thead.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? thead.append(element) : thead.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? thead.append(attrValue) : thead.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    thead.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    thead.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            thead.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            thead.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return thead;\n}\n\n\nexport const tbody = (attributes = {}) => {\n    let tbody = document.createElement(\"tbody\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                tbody.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        tbody.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? tbody.append(element) : tbody.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? tbody.append(attrValue) : tbody.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    tbody.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    tbody.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            tbody.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            tbody.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return tbody;\n}\n\n\nexport const tr = (attributes = {}) => {\n    let tr = document.createElement(\"tr\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                tr.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        tr.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? tr.append(element) : tr.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? tr.append(attrValue) : tr.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    tr.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    tr.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            tr.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            tr.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return tr;\n}\n\n\nexport const th = (attributes = {}) => {\n    let th = document.createElement(\"th\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                th.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        th.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? th.append(element) : th.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? th.append(attrValue) : th.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    th.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    th.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            th.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            th.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return th;\n}\n\n\nexport const td = (attributes = {}) => {\n    let td = document.createElement(\"td\");\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                td.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        td.className = String(attrValue);\n                        break;\n                    case \"value\":\n                        if (isArray(attrValue)) {\n                            attrValue.forEach((element) => {\n                                isHtmlElement(element) ? td.append(element) : td.innerHTML = String(element)\n                            })\n                        } else {\n                            isHtmlElement(attrValue) ? td.append(attrValue) : td.innerHTML = String(attrValue)\n                        }\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    td.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    td.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            td.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            td.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return td;\n}\n\nexport const img = (attributes = {}) => {\n    let img = document.createElement(\"img\");\n    img.alt = \"img...\";\n    if (attributes) {\n        Object.entries(attributes).forEach(([name, attrValue]) => {\n            if ((name.startsWith('on') || name.startsWith(\"mouse\")) && typeof attrValue === 'function') {\n                const eventType = name.startsWith(\"mouse\") ? name.toLowerCase() : name.slice(2).toLowerCase();\n                img.addEventListener(eventType, attrValue);\n            } else {\n                switch (name) {\n                    case \"class\":\n                        img.className = String(attrValue);\n                        break;\n                    case \"src\":\n                        img.src = String(attrValue);\n                        break;\n                    case \"alt\":\n                        img.alt = String(attrValue);\n                        break;\n                    case \"style\":\n                        Object.entries(attrValue).forEach(([styleName, styleValue]) => {\n                            switch (styleName) {\n                                case \"zIndex\":\n                                    img.style[styleName] = `99999${styleValue}`;\n                                    break;\n                                default:\n                                    img.style[styleName] = styleValue;\n                                    break;\n                            }\n                        });\n                        break;\n                    default:\n                        if (name.startsWith(\"data\")) {\n                            const kebabName = name\n                                .replace(/^data/, \"data\")\n                                .replace(/([A-Z])/g, \"-$1\")\n                                .toLowerCase();\n                            img.setAttribute(kebabName, String(attrValue));\n                        } else {\n                            img.setAttribute(name, String(attrValue));\n                        }\n                }\n            }\n        });\n    }\n    return img;\n}\n\nexport const apState = (initialValue) => {\n    let state = initialValue;\n    const getState = () => state;\n    const setState = (newValue) => {\n        if (typeof newValue === \"function\") {\n            state = newValue(state);\n        } else {\n            state = newValue;\n        }\n    }\n    return [getState, setState];\n}\n\nexport const apFetch = async (url, params = {}) => {\n    const [data, setData] = apState(null);\n    const [error, setError] = apState(null);\n    const [isLoading, setIsLoading] = apState(false);\n\n    const fetchData = async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(url, params);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const result = await response.json();\n            setData(result);\n        } catch (err) {\n            console.error(err.message)\n            setError(err.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    await fetchData();\n\n    return [data, error, isLoading];\n}\n\nexport const scrollToTop = () => {\n    window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n    });\n}\n\nexport const scrollToBottom = () => {\n    window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n    });\n}\n\nexport const _get = (name, defaulting = null) => {\n    let url = new URL(window.location.href);\n    let searchParams = new URLSearchParams(url.search);\n    if (searchParams.has(name)) {\n        return isFloat(searchParams.get(name)) || isNumeric(searchParams.get(name))\n            ? parseFloat(searchParams.get(name))\n            : searchParams.get(name);\n    }\n    return defaulting;\n};\n\nexport const _getAll = () => {\n    let url = new URL(window.location.href);\n    let searchParams = new URLSearchParams(url.search);\n    let params = {};\n    searchParams.forEach((value, key) => {\n        params[key] = isFloat(value) || isNumeric(value) ? parseFloat(value) : value;\n    });\n    return params;\n};\n\nexport const GUID = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\n        const random = Math.random() * 16 | 0;\n        const value = char === 'x' ? random : (random & 0x3 | 0x8);\n        return value.toString(16);\n    });\n};\n\nexport const checkArrays = (arr1, arr2, checkAll = false) => {\n    const set1 = new Set(arr1);\n    if (checkAll) {\n        return arr2.every(item => set1.has(item));\n    } else {\n        return arr2.some(item => set1.has(item));\n    }\n};\n\nconst customTitle = (text) => {\n    const title = div({\n        id: \"tooltip\",\n        style: {\n            position: \"absolute\",\n            padding: \"6px 10px\",\n            display: \"block\",\n            fontSize: \"10px\",\n            whiteSpace: \"nowrap\",\n            color: \"#ffffff\",\n            background: \"rgba(51, 51, 51, 0.8)\",\n            borderRadius: \"0.5rem\",\n            boxShadow: \"0 3 7 rgba(51, 51, 51, 0.8)\",\n            pointerEvents: \"none\",\n            zIndex: 1000,\n        },\n        value: text\n    });\n    document.body.appendChild(title);\n\n    return title;\n};\n\nexport const attachCustomTitle = (element, text) => {\n    let tooltip = element._customTooltip;\n\n    if (!tooltip) {\n        tooltip = customTitle(text);\n        element._customTooltip = tooltip;\n    }\n\n    element.addEventListener(\"mouseenter\", () => {\n        tooltip.style.display = \"block\";\n    });\n\n    element.addEventListener(\"mousemove\", (e) => {\n        tooltip.style.left = `${e.pageX + 10}px`;\n        tooltip.style.top = `${e.pageY + 10}px`;\n    });\n\n    element.addEventListener(\"mouseleave\", () => {\n        tooltip.style.display = \"none\";\n    });\n};\n", "class Debugger {\n    #consoleDump = (args) => {\n        args.forEach(arg => {\n            const type = typeof arg;\n            if (type === 'object') {\n                console.info(arg);\n            } else {\n                console.warn(`(%c${type}%c): %c${arg}`, 'color: #ff5722;', 'color: #007acc;', 'color: #333;');\n            }\n        });\n    }\n\n    dump = (...args) => {\n        console.group('%c🛠️ Dump Output:', 'font-weight: bold; color: #043458; font-size: 12px; background-color: #b3c2cc; padding: 4px 16px; border-radius: 4px;');\n        console.warn('%cLocation:', 'color: #000acc; font-style: italic; font-size: 10px; background-color: #b3c2cc; padding: 4px 8px; border-radius: 4px;');\n        this.#consoleDump(args);\n        console.groupEnd();\n    }\n\n    dd = (...args) => {\n        console.group('%c🛠️ Debug Dump Output', 'font-weight: bold; color: #043458; font-size: 12px; background-color: #b3c2cc; padding: 4px 16px; border-radius: 4px;');\n        this.#consoleDump(args);\n        console.groupEnd();\n        debugger;\n    }\n}\n\nconst debuggerClass = new Debugger();\nexport const dump = (...args) => debuggerClass.dump(args);\nexport const dd = (...args) => debuggerClass.dd(args);", "export const redirect = (url, { newTab = false, replace = false } = {}) => {\n    if (newTab) {\n        window.open(url, \"_blank\");\n    } else if (replace) {\n        window.location.replace(url);\n    } else {\n        window.location.href = url;\n    }\n}\n\nexport const reload = (delaySeconds = 0.7) => setTimeout(() => window.location.reload(), (delaySeconds * 1000));\n", "import {div} from \"./aprog.js\";\n\nconst NotFound = (message = \"Page Not Found\") => {\n    return div({\n        style: style,\n        value: [\n            div({\n                style: style2,\n                value: \"404\"\n            }),\n            div({value: message})\n        ]\n    });\n}\n\nconst style = {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"1.875rem\"\n};\n\nconst style2 = {\n    fontSize: \"3rem\",\n    fontWeight: \"bold\",\n    color: \"#ff2800\"\n}\n\nexport default NotFound;\n", "import NotFound from \"./NotFound.js\";\n\nconst router = async ({ routes, main, message = \"Page Not Found\" }) => {\n    const renderRoute = async () => {\n        const routeComponent = await useRoutes(routes, message);\n        main.innerHTML = \"\";\n        if (routeComponent) {\n            main.appendChild(routeComponent);\n        }\n    }\n    window.addEventListener('popstate', renderRoute);\n    await renderRoute();\n}\n\n\nconst navigateTo = (path) => {\n    window.history.pushState(\"\", \"\", path);\n}\n\n\nconst useRoutes = async (routes, message) => {\n    const path = window.location.pathname;\n    const matchingRoute = routes.find(route => route.path === path);\n    return matchingRoute ? await matchingRoute.component() : NotFound(message);\n}\n\n\nexport { router, navigateTo };\n", "class Shifrator {\n    constructor(key = 3) {\n        this.key = key;\n    }\n\n    encrypt(str) {\n        return str\n            .split('')\n            .map(char => String.fromCharCode(char.charCodeAt(0) + this.key))\n            .join('');\n    }\n\n    decrypt(encryptedStr) {\n        return encryptedStr\n            .split('')\n            .map(char => String.fromCharCode(char.charCodeAt(0) - this.key))\n            .join('');\n    }\n}\n\nconst shifratorClass = new Shifrator();\nexport const encrypt = (str) => shifratorClass.encrypt(str);\nexport const decrypt = (encryptedStr) => shifratorClass.decrypt(encryptedStr);\n", "const dbName = \"aprogDB\";\nconst storeName = \"cacheGemini\";\n\n/**\n * Відкриття або створення IndexedDB\n */\nconst openDB = () => {\n    return new Promise((resolve, reject) => {\n        const request = indexedDB.open(dbName, 1);\n\n        request.onupgradeneeded = (event) => {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains(storeName)) {\n                db.createObjectStore(storeName, { keyPath: \"id\" });\n            }\n        };\n\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n    });\n};\n\n/**\n * Завантаження кешу (аналог sessionStorage.getItem)\n */\nconst loadCacheDB = async (name = \"gemini\") => {\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n        const tx = db.transaction(storeName, \"readonly\");\n        const store = tx.objectStore(storeName);\n        const request = store.get(name);\n\n        request.onsuccess = () => resolve(request.result ? request.result.data : {});\n        request.onerror = () => reject(request.error);\n    });\n};\n\n/**\n * Збереження кешу (аналог sessionStorage.setItem)\n */\nconst saveCacheDB = async (cache, id = \"gemini\") => {\n    try {\n        const resolvedCache = await Promise.resolve(cache);\n        const db = await openDB();\n        const tx = db.transaction(storeName, \"readwrite\");\n        const store = tx.objectStore(storeName);\n\n        await store.put({ id: id, data: resolvedCache });\n        await tx.complete;\n    } catch (err) {\n        console.error(\"Failed to save cache:\", err);\n    }\n};\n\nexport {loadCacheDB, saveCacheDB};\n", "import {loadCacheDB, saveCacheDB} from \"./indexDB.js\";\n\nconst empty = (variable) => {\n    if (typeof variable === 'object' && !Array.isArray(variable) && Object.keys(variable).length === 0) {\n        return true;\n    }\n    return !variable;\n}\n\nconst loadCache = async () => {\n    const data = await loadCacheDB();\n    return !empty(data) ? data : { messages: {} };\n}\n\nexport const gemini = async (content) => {\n    let cache = await loadCache();\n\n    if (cache.messages[content]) {\n        console.warn(\"Відповідь знайдена у кеші\");\n        return cache.messages[content];\n    }\n\n    const apiKey = import.meta.env.VITE_GEMINI_KEY;\n    const url = `https://generativelanguage.googleapis.com/v1/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n    const response = await fetch(url, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n            contents: [{ parts: [{ text: content }] }]\n        })\n    });\n\n    const data = await response.json();\n    if (data.error) {\n        console.error(data.error.message)\n        cache.messages[content] = data.error.message;\n        await saveCacheDB(cache);\n        return data.error.message;\n    }\n\n    const answer = data.candidates?.[0]?.content?.parts?.[0]?.text || null;\n\n    if (answer) {\n        cache.messages[content] = answer;\n        await saveCacheDB(cache);\n    }\n\n    return answer;\n};\n", "export const mathInput = (target) => {\n    const enter = target.value.includes(\"=\");\n    let result = target.value;\n\n    if (enter) {\n        const expression = target.value.slice(0, -1);\n        try {\n            result = new Function(`return ${expression}`)();\n        } catch (error) {\n            result = target.value;\n        }\n\n        target.value = result;\n    }\n\n    return result;\n}", "export const cookie = {\n    get(name) {\n        const cookies = document.cookie.split('; ');\n        for (let cookie of cookies) {\n            let [key, value] = cookie.split('=');\n            if (key === name) {\n                return decodeURIComponent(value);\n            }\n        }\n        return null;\n    },\n\n    set(name, value, days = 7) {\n        let expires = \"\";\n        if (days) {\n            let date = new Date();\n            date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n            expires = \"; expires=\" + date.toUTCString();\n        }\n        document.cookie = name + \"=\" + encodeURIComponent(value) + expires + \"; path=/\";\n    },\n\n    delete(name) {\n        document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    }\n};\n\nexport const storage = {\n    get(key, defaulting = null) {\n        return JSON.parse(localStorage.getItem(key)) || defaulting;\n    },\n\n    set(key, data) {\n        localStorage.setItem(key, JSON.stringify(data));\n    },\n\n    delete(key) {\n        localStorage.removeItem(key);\n    }\n};\n", "import {storage} from \"./storage.js\";\nimport {button, div} from \"./aprog.js\";\n\nexport const paginate = ({ count = 0, currentPage = 1, onPageChange = () => {}, colors = {} } = {}) => {\n    const defaultColors = {\n        defaultColor: \"#043458\",\n        backgroundColor: \"#ffffff\",\n        boxShadow: \"0 3px 6px 0 rgba(115,73,118, 0.4), 0 3px 6px 0 rgba(115,73,118, 0.39)\",\n        borderRadius: \"0.5rem\",\n        fontSize: \"16px\",\n        borderWidth: \"0.0313rem\",\n        border: \"border: ${theme.borderWidth} solid ${theme.defaultColor};\"\n    };\n\n    const theme = { ...defaultColors, ...colors };\n\n    const styles = `\n        <style>\n            .paginate-block {\n                width: 100vw;\n                padding: 0 20px;\n                margin: 20px 0;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 5px;\n            }\n            .paginate-btn,\n            .paginate-dots,\n            .paginate-prev,\n            .paginate-next {\n                padding: 10px 20px;\n                font-size: ${theme.fontSize};\n                font-weight: 600;\n                color: ${theme.defaultColor};\n                background: ${theme.backgroundColor};\n                ${theme.border}\n                border-radius: ${theme.borderRadius};\n                cursor: pointer;\n                box-shadow: ${theme.boxShadow};\n            }\n            .paginate-prev,\n            .paginate-next {\n                font-family: Roboto, serif;\n                font-weight: 700;\n            }\n            .paginate-btn.active {\n                background: ${theme.defaultColor};\n                color: ${theme.backgroundColor};\n            }\n            .paginate-btn:disabled,\n            .paginate-dots:disabled,\n            .paginate-prev:disabled,\n            .paginate-next:disabled {\n                cursor: not-allowed;\n                opacity: 0.5;\n            }\n            \n            /** Counter */\n            .counter {\n                width: 100%;\n                margin: 20px 0;\n                padding: 0 20px;\n                display: flex;\n                align-items: center;\n                justify-content: start;\n                gap: 20px;\n            }\n            .counter span {\n                padding: 8px 16px;\n                border-radius: ${theme.borderRadius};\n                box-shadow: ${theme.boxShadow};\n                cursor: pointer;\n            }\n            .counter span.active {\n                color: ${theme.backgroundColor};\n                background-color: ${theme.defaultColor};\n            }\n        </style>\n    `;\n\n    const generatePageButtons = () => {\n        const buttons = [];\n        if (count <= 5) {\n            for (let i = 1; i <= count; i++) {\n                buttons.push(createPageButton(i));\n            }\n        } else {\n            buttons.push(createPageButton(1));\n            if (currentPage > 3) {\n                buttons.push(createDotsButton());\n            }\n            for (\n                let i = Math.max(2, currentPage - 1);\n                i <= Math.min(count - 1, currentPage + 1);\n                i++\n            ) {\n                buttons.push(createPageButton(i));\n            }\n            if (currentPage < count - 2) {\n                buttons.push(createDotsButton());\n            }\n            buttons.push(createPageButton(count));\n        }\n        return buttons;\n    }\n\n    const createPageButton = (page) => button({\n        class: `paginate-btn ${page === currentPage ? \"active\" : \"\"}`,\n        value: `${page}`,\n        onClick: () => onPageChange(page),\n    });\n\n    const createDotsButton = () => button({\n        class: \"paginate-dots\",\n        disabled: true,\n        value: \"...\",\n    });\n\n    const navigateTo = (path) => {\n        window.history.pushState(\"\", \"\", path);\n    };\n\n    let url = new URL(window.location.href);\n    let searchParams = new URLSearchParams(url.search);\n\n    searchParams.set(\"page\", String(currentPage || 1));\n    navigateTo(`${window.location.pathname}?${searchParams.toString()}`);\n\n    return div({\n        class: \"paginate-block\",\n        value: [\n            [styles],\n            button({\n                class: \"paginate-prev\",\n                value: \"<<<\",\n                onClick: () => onPageChange(currentPage > 1 ? currentPage - 1 : 1),\n                disabled: currentPage === 1 || currentPage === 0,\n            }),\n            ...generatePageButtons(),\n            button({\n                class: \"paginate-next\",\n                value: \">>>\",\n                onClick: () => onPageChange(currentPage < count ? currentPage + 1 : count),\n                disabled: currentPage === count,\n            }),\n        ],\n    });\n};\n\nexport const parseData = (data, page) => {\n    const pageSize = storage.get(\"pageSize\");\n    const totalData = data.length;\n    const pages = Math.ceil(totalData / pageSize);\n    if (page > pages) {\n        page = pages;\n    }\n    const cutData = data.slice((page - 1) * pageSize, page * pageSize);\n\n    return [pages, cutData, page, totalData];\n};\n"],
  "mappings": "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",
  "names": ["date", "value", "input", "label", "form", "div", "a", "span", "textarea", "pre", "button", "select", "option", "hr", "meta", "table", "caption", "thead", "tbody", "tr", "th", "td", "img", "cookie", "date", "navigateTo"]
}
